{
  "createdAt": "2025-07-28T15:46:30.782Z",
  "updatedAt": "2025-07-31T17:08:13.480Z",
  "id": "Lz3TsK5Mct7NlEEO",
  "name": "[ IAmanda ] - Carrinho abandonado - part3",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "content": "# ETAPA 3 FOLLOW\n",
        "height": 880,
        "width": 4600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        16
      ],
      "typeVersion": 1,
      "id": "84fe4482-118d-4312-9b32-4e84ada826ac",
      "name": "Sticky Note2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4128,
        416
      ],
      "id": "7f083308-6a5f-4ad2-b48b-88b36fa21e5f",
      "name": "Evolution API2",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {},
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1328,
        272
      ],
      "id": "2fe7a4db-4473-41b5-bfaf-cf86a47e7e1a",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "limit": 10,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $node[\"Loop Over Items2\"].json[\"session\"] }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2048,
        352
      ],
      "id": "d7a59808-f017-49c8-abb5-b9440340055b",
      "name": "Lista o historico de conversa",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2256,
        352
      ],
      "id": "9c1f62aa-a89a-4c84-8e7a-7a82b9d0300f",
      "name": "Agrega em um objeto2"
    },
    {
      "parameters": {
        "jsCode": "const messages = $input.first().json.message\n\nconst novaData = new Date()\nconst horaAtual = new Date(novaData.getTime() - 3 * 60 * 60 * 1000)\n\nconst conversation = messages\n  .filter(m => m?.message?.content !== null && m?.message?.content !== undefined)\n  .map((message) => {\n    const originalDate = new Date(message.created_at)\n    const adjustedDate = new Date(originalDate.getTime() - 3 * 60 * 60 * 1000) // ajuste horário\n\n    return {\n      type: message.message.type,\n      content: message.message.content,\n      time: adjustedDate.toISOString()\n    }\n  })\n\nconversation.reverse()\n\n// Última mensagem\nconst ultimaMensagem = conversation[conversation.length - 1]\nconst horaUltimaMensagem = new Date(ultimaMensagem.time)\n\n// Cálculo do tempo decorrido\nconst tempoDecorridoMs = horaAtual - horaUltimaMensagem\nconst tempoDecorridoHour = Math.floor(tempoDecorridoMs / 3600000)\n\nreturn {\n  tempoDecorridoHour\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2464,
        352
      ],
      "id": "9c5caa59-1942-451b-bbe3-3ee57a9aef5d",
      "name": "Soma tempo da ultima mensagem2"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tb_follow",
          "mode": "list",
          "cachedResultName": "tb_follow"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "follow_count": "=3",
            "id": "={{ $node[\"Loop Over Items2\"].json[\"id\"] }}",
            "last_messagem": "={{ $node[\"Merge Texto1\"].json[\"text\"].replace(/\\n/g, ' ').replace(/\"/g, '').replace(/\"/g, '') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_messagem",
              "displayName": "last_messagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "follow_count",
              "displayName": "follow_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "session_id_cart",
              "displayName": "session_id_cart",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "valor_total_carrinho",
              "displayName": "valor_total_carrinho",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session",
              "displayName": "session",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "produtos",
              "displayName": "produtos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4848,
        448
      ],
      "id": "0bf0cf2d-e2d3-4b06-a889-0b30a35e9448",
      "name": "Inseri no TB follow"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "created_at": "={{ $now }}",
            "session_id": "={{ $node[\"Loop Over Items2\"].json[\"session\"] }}",
            "message": "={\n  \"type\": \"ai\",\n  \"content\": \"{{ $node[\"Merge Texto1\"].json[\"text\"].replace(/\\n/g, ' ').replace(/\"/g, '').replace(/\"/g, '') }}\",\n  \"tool_calls\": [],\n  \"additional_kwargs\": {\n    \"tipo\": [\"recuperacao_carrinho\", \"mensagem_para_quebrar_o_gelo\"]\n  }\n}\n"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4432,
        448
      ],
      "id": "a2b1fe95-cedf-487d-b22f-8dd421daddfa",
      "name": "Salva no char historie"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22f8fa00-abae-4dc7-b56c-8a38a600079a",
              "leftValue": "={{ $json.follow_count }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1056,
        272
      ],
      "id": "4d57b750-a151-42ae-bf64-5287dce2169f",
      "name": "Verifica a quantidade de follow feita1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "created_at": "={{ $now }}",
            "session_id": "={{ $json.session_id }}",
            "message": "={\"type\":\"system\",\"content\":\"⚠️ Este cliente recebeu a terceira  mensagem de recuperação de carrinho. foi enviado uma mensagem para tentar quebra o gelo da conversa.\",\"additional_kwargs\":{\"tipo\": \"recuperacao_carrinho\"},\"response_metadata\":{}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4624,
        448
      ],
      "id": "19c1effa-6818-4953-a244-a85c69f3b190",
      "name": "Salva mensagem Human"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "sessions",
          "mode": "list",
          "cachedResultName": "sessions"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $node[\"Loop Over Items2\"].json[\"session\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1584,
        288
      ],
      "id": "e9666037-8144-4ac1-b10d-f93b2e4bbaa1",
      "name": "Busca Sessao1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */15 8-21 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        608,
        272
      ],
      "id": "30c422ff-d337-47cf-bc47-d95e969daf54",
      "name": "Cada 15 minutos2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ba03471-d920-44ce-aaee-21a4d05f3c27",
              "leftValue": "={{ $json.block }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1808,
        288
      ],
      "id": "0d87bbf8-b4a6-4e49-ba3f-d63edf324a0b",
      "name": "Verifica se tem block1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b861bfd2-24e0-4c7f-af78-140409e0eab5",
              "leftValue": "={{ $node[\"Soma tempo da ultima mensagem2\"].json[\"tempoDecorridoHour\"] }}",
              "rightValue": 6,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2688,
        352
      ],
      "id": "23e9ec5b-ac56-4134-8f2b-59f1a8191cb0",
      "name": "Se passou 6hrs"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e358aee0-c38f-413b-84d3-dc6db53cdbec",
              "leftValue": "={{ $node[\"Agrega em um objeto2\"].json[\"message\"][0].message.type }}",
              "rightValue": "system",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2928,
        416
      ],
      "id": "87f576db-d69b-48f8-aa63-000f63531333",
      "name": "Verifica se o ultimo follow foi respondido1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $node[\"Agrega em um objeto2\"].json[\"message\"] }}",
        "options": {
          "systemMessage": "=Chat, você vai receber o histórico de mensagens do cliente. Com base nesse histórico, crie uma mensagem de recuperação de carrinho personalizada e relevante, conectada ao contexto da conversa.\n\nO objetivo é convencer o cliente a finalizar a compra de forma natural e alinhada com o tom anterior.\n\nExemplo de mensagem que iramos mandar caso o cliente não tivesse respondido:\n\n\"Agora que vi que o áudio ficou mudo 🤦‍♀️\n\nVocê prefere que eu te mande um cupom com um brinde ou um desconto pra te ajudar a garantir seus vasos com frete especial?\"\n\nInstruções importantes:\n- Use o histórico para manter coerência com o que já foi conversado.\n- Foque em criar uma mensagem que converta, mas sem prometer ofertas exageradas ou irreais.\n- Mantenha um tom amigável e de confiança.\n- Proponha apenas condições viáveis (exemplo: cupom de desconto ou brinde, garantia extra).\n- NÃO invente promoções ou condições que não existem.\n\nO resultado deve ser uma mensagem curta, persuasiva e conectada ao contexto anterior para estimular a finalização da compra.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        3184,
        432
      ],
      "id": "5c1c9e7f-047f-4756-8f0a-0d2deaabb059",
      "name": "Gerar uma mensagem com contexto1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fda5aa34-f464-4361-b6e6-c1bfc663da93",
              "name": "text",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3696,
        432
      ],
      "id": "7e41c4c7-fe3e-425a-a16b-d355b332f7ee",
      "name": "Texto2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "58e5cd38-569d-4ca2-a1ac-eee728156a84",
              "name": "text",
              "value": "Agora que vi que o áudio ficou mudo 🤦‍♀️  Você prefere que eu te mande um cupom com um brinde ou um desconto pra te ajudar a garantir seus vasos com frete especial?",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3424,
        288
      ],
      "id": "6ab596d5-8db3-4040-8a3a-fd9a03f20ded",
      "name": "Texto3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        3888,
        416
      ],
      "id": "3feae220-85e6-44e5-8697-10aae8996872",
      "name": "Merge Texto1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3536,
        448
      ],
      "id": "f63f1dd1-7940-4369-b048-1c2682cf7a0a",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM tb_follow fl\nWHERE (\n  NOT EXISTS (\n    SELECT 1\n    FROM tb_compradores c\n    WHERE c.id_sessao = fl.session_id_cart\n  )\n)\nAND fl.follow_count = '2'\nAND fl.created_at >= CURRENT_DATE - INTERVAL '1 day';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        784,
        272
      ],
      "id": "f7ce69de-42fa-4b79-b370-1ba2ed3f6743",
      "name": "Busca tb follow count 2"
    }
  ],
  "connections": {
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Busca Sessao1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lista o historico de conversa": {
      "main": [
        [
          {
            "node": "Agrega em um objeto2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agrega em um objeto2": {
      "main": [
        [
          {
            "node": "Soma tempo da ultima mensagem2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Soma tempo da ultima mensagem2": {
      "main": [
        [
          {
            "node": "Se passou 6hrs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inseri no TB follow": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva no char historie": {
      "main": [
        [
          {
            "node": "Salva mensagem Human",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica a quantidade de follow feita1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva mensagem Human": {
      "main": [
        [
          {
            "node": "Inseri no TB follow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca Sessao1": {
      "main": [
        [
          {
            "node": "Verifica se tem block1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cada 15 minutos2": {
      "main": [
        [
          {
            "node": "Busca tb follow count 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica se tem block1": {
      "main": [
        [
          {
            "node": "Lista o historico de conversa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se passou 6hrs": {
      "main": [
        [
          {
            "node": "Verifica se o ultimo follow foi respondido1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica se o ultimo follow foi respondido1": {
      "main": [
        [
          {
            "node": "Texto3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar uma mensagem com contexto1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar uma mensagem com contexto1": {
      "main": [
        [
          {
            "node": "Texto2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto2": {
      "main": [
        [
          {
            "node": "Merge Texto1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Texto3": {
      "main": [
        [
          {
            "node": "Merge Texto1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Gerar uma mensagem com contexto1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Busca tb follow count 2": {
      "main": [
        [
          {
            "node": "Verifica a quantidade de follow feita1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Cada 15 minutos2": [
      {
        "json": {
          "timestamp": "2025-07-15T17:30:00.033-03:00",
          "Readable date": "July 15th 2025, 5:30:00 pm",
          "Readable time": "5:30:00 pm",
          "Day of week": "Tuesday",
          "Year": "2025",
          "Month": "July",
          "Day of month": "15",
          "Hour": "17",
          "Minute": "30",
          "Second": "00",
          "Timezone": "America/Sao_Paulo (UTC-03:00)"
        }
      }
    ]
  },
  "versionId": "636c295c-c8e8-4484-9a96-8ded21fb2daa",
  "triggerCount": 0,
  "tags": []
}